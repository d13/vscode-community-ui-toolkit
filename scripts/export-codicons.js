import fs from 'fs';

fs.readFile(
  'node_modules/@vscode/codicons/src/template/mapping.json',
  'utf8',
  (err, data) => {
    if (err) {
      console.error('Error reading file:', err);
      return;
    }

    try {
      const mapping = JSON.parse(data);

      const fileContents = `/*---------------------------------------------------------------------------------------------
 *  (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

// This file is automatically generated by (vscode-community-ui-toolkit)/scripts/export-codicons.js
// Please don't edit it, as your changes will be overwritten.
export const codiconsLibrary = Object.freeze({
  ${Object.entries(mapping)
    .map(([name, value]) => {
      return `'${name}': '${numberToCssContent(value)}'`;
    })
    .join(',\n  ')}
});`;

      fs.writeFile('src/icons/codicons.ts', fileContents, (err) => {
        if (err) {
          console.error('Error writing file:', err);
          return;
        }
        console.log('codicons.ts file generated successfully');
      });
    } catch (error) {
      console.error('Error parsing JSON:', error);
    }
  }
);

function numberToCssContent(number) {
  return `\\\\${number.toString(16)}`;
}
